// Esperar a que el DOM esté completamente cargado
document.addEventListener('DOMContentLoaded', () => {
    // Inicializar todas las funcionalidades
    initNavbar();
    initTypingEffect();
    initScrollAnimations();
    initProjectHovers();
    initSkillCards();
});

// Control de la navbar
function initNavbar() {
    const navbar = document.querySelector('.navbar');
    let lastScroll = 0;

    window.addEventListener('scroll', () => {
        const currentScroll = window.pageYOffset;

        // Cambiar estilo de navbar al hacer scroll
        if (currentScroll > 100) {
            navbar.style.background = 'rgba(10, 25, 47, 0.95)';
            navbar.style.boxShadow = '0 10px 30px -10px rgba(2, 12, 27, 0.7)';
        } else {
            navbar.style.background = 'rgba(10, 25, 47, 0.85)';
            navbar.style.boxShadow = 'none';
        }

        // Ocultar/mostrar navbar al hacer scroll
        if (currentScroll > lastScroll && currentScroll > 100) {
            navbar.style.transform = 'translateY(-100%)';
        } else {
            navbar.style.transform = 'translateY(0)';
        }

        lastScroll = currentScroll;
    });
}

// Efecto de escritura para el subtítulo
function initTypingEffect() {
    const text = document.querySelector('.typing-text');
    const words = ['TSU en Desarrollo Multiplataforma', 'Desarrollador Web', 'Programador'];
    let wordIndex = 0;
    let charIndex = 0;
    let isDeleting = false;
    let isLineEnding = false;

    function type() {
        const word = words[wordIndex];
        const currentWord = word.substring(0, charIndex);
        text.textContent = currentWord;

        if (!isDeleting && charIndex < word.length) {
            // Escribiendo
            charIndex++;
            isLineEnding = false;
        } else if (!isDeleting && charIndex === word.length) {
            // Fin de palabra
            isLineEnding = true;
            isDeleting = true;
            setTimeout(type, 1500);
            return;
        } else if (isDeleting && charIndex > 0) {
            // Borrando
            charIndex--;
        } else if (isDeleting && charIndex === 0) {
            // Cambiar palabra
            isDeleting = false;
            wordIndex = (wordIndex + 1) % words.length;
        }

        const typingSpeed = isDeleting ? 50 : isLineEnding ? 1500 : 100;
        setTimeout(type, typingSpeed);
    }

    type();
}

// Animaciones al hacer scroll
function initScrollAnimations() {
    const elements = document.querySelectorAll('.about, .skills, .projects, .contact');

    const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                entry.target.style.opacity = '1';
                entry.target.style.transform = 'translateY(0)';
            }
        });
    }, {
        threshold: 0.1
    });

    elements.forEach(element => {
        element.style.opacity = '0';
        element.style.transform = 'translateY(20px)';
        element.style.transition = 'all 0.6s ease-out';
        observer.observe(element);
    });
}

// Efectos hover para proyectos
function initProjectHovers() {
    const projects = document.querySelectorAll('.project-card');

    projects.forEach(project => {
        project.addEventListener('mouseenter', () => {
            project.style.transform = 'translateY(-10px)';
            project.style.boxShadow = '0 20px 30px -15px rgba(2,12,27,0.7)';
        });

        project.addEventListener('mouseleave', () => {
            project.style.transform = 'translateY(0)';
            project.style.boxShadow = 'none';
        });
    });
}

// Animación para tarjetas de habilidades
function initSkillCards() {
    const cards = document.querySelectorAll('.skill-card');

    cards.forEach((card, index) => {
        card.style.animationDelay = `${index * 100}ms`;
        card.classList.add('fade-in-up');
    });
}

// Efecto parallax para el hero
window.addEventListener('scroll', () => {
    const hero = document.querySelector('.hero');
    const scrolled = window.pageYOffset;
    hero.style.transform = `translateY(${scrolled * 0.4}px)`;
});

// Smooth scroll para links de navegación
document.querySelectorAll('a[href^="#"]').forEach(anchor => {
    anchor.addEventListener('click', function(e) {
        e.preventDefault();
        const target = document.querySelector(this.getAttribute('href'));
        target.scrollIntoView({
            behavior: 'smooth',
            block: 'start'
        });
    });
});

// Detectar cuando el scroll llega al fondo para efectos en el footer
window.addEventListener('scroll', () => {
    if ((window.innerHeight + window.scrollY) >= document.body.offsetHeight - 100) {
        document.querySelector('footer').classList.add('show');
    }
});

// Animación de carga inicial
window.addEventListener('load', () => {
    document.body.classList.add('loaded');
});

// Prevenir el flickering durante la carga
document.body.style.visibility = 'visible';
